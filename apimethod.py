import requests


def get_price(pair: str) -> str:
    try:
        pair = pair.upper()
        url = f'https://api.binance.com/api/v3/ticker/price?symbol={pair}'
        response = requests.get(url)
        data = response.json()
        return f"üí∞–ö—É—Ä—Å {data['symbol']} = {float((data['price']))}$"
    except KeyError:
        return '–ü–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!'


def get_24h_statistic(pair: str) -> str:
    try:
        pair = pair.upper()
        url = f'https://api.binance.com/api/v3/ticker/24hr?symbol={pair}'
        response = requests.get(url)
        data = response.json()
        msg = (
            f'üìà–°—Ç–∞—Ç–∏—Å—Ç–∫–∞ –∑–∞ 24 —á–∞—Å–∞:\n'
            f'–ü–∞—Ä–∞: {data["symbol"]}\n'
            f'–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ %: {data["priceChangePercent"]}\n'
            f'–ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {float(data["lastPrice"])}\n'
            f'–û–±—ä—ë–º —Ç–æ—Ä–≥–æ–≤ 1: {round(float(data["volume"]), 1)}\n'
            f'–û–±—ä—ë–º —Ç–æ—Ä–≥–æ–≤ 2: {round(float(data["quoteVolume"]), 1)}\n'
            f'–ú–∏–Ω. –∑–∞ 24—á.: {float(data["lowPrice"])}\n'
            f'–ú–∞–∫—Å. –∑–∞ 24—á.: {float(data["highPrice"])}\n'
            f'BID: {float(data["bidPrice"])}\n'
            f'ASK: {float(data["askPrice"])}\n'
        )
        return msg
    except KeyError:
        return '–ü–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!' 
